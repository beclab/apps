apiVersion: v1
data:
  nginx.conf: |
    stream {
      server {
          listen  8001;  
          proxy_pass 127.0.0.1:8080;
      }
    }

    events {
      # Your event-related configurations go here
    }

    http {
      # Your HTTP server configurations go here
    }

kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  init.sh: |
    #!/bin/bash

    appDataDir="/appData"
    configDir="/config/qBittorrent"

    if [ "$(ls -A $appDataDir)" ]; then
      echo "$appDataDir not empty"
    else
      echo "$appDataDir is empty"
      cp -r $configDir/. $appDataDir
      echo "copy succeed"
    fi


kind: ConfigMap
metadata:
  name: init-config
  namespace: {{ .Release.Namespace }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        - name: home
          hostPath:
            type: Directory
            path: {{ .Values.userspace.userData }}
        - name: appdata
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appData }}/qbittorrent
        - name: nginx-config
          configMap:
            name: nginx-config
            defaultMode: 438
            items:
            - key: nginx.conf
              path: nginx.conf
        - name: init-config
          configMap:
            name: init-config
            defaultMode: 438
            items:
            - key: init.sh
              path: init.sh
      initContainers:
        - name: init-chmod-data
          image: 'busybox:latest'
          command:
            - sh
            - '-c'
            - |
              chown -R 1000:1000 /home
          resources: {}
          volumeMounts:
            - name: home
              mountPath: /home
          securityContext:
            runAsUser: 0
        - name: init-qbittorrent-config
          image: 'aboveos/qbittorrent:latest'
          command:
            - sh
            - '-c'
            - |
              chmod +x /init.sh & bash /init.sh
          resources: {}
          volumeMounts:
            - name: appdata
              mountPath: /appData
            - name: init-config 
              mountPath: /init.sh
              subPath: init.sh
          securityContext:
            runAsUser: 0            
      containers:
        - name: nginx
          image: nginx:latest
          volumeMounts:
          - name: nginx-config 
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          ports:
          - containerPort: 8001
          resources:
            requests:
              cpu: 10m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
        - name: qbittorrent
          image: 'aboveos/qbittorrent:latest'
          resources:
            requests:
              cpu: 40m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 512Mi
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: PGID
              value: "1000" 
            - name: PUID
              value: "1000" 
            - name: UMASK
              value: "002" 
            - name: TZ
              value: UTC
          volumeMounts:
            - name: home
              mountPath: /home
            - name: appdata
              mountPath: /config/qBittorrent
          livenessProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      automountServiceAccountToken: true
      securityContext: {}
      enableServiceLinks: true
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: {{ .Release.Name }}-svc
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: legacy_api
  deployment: qbittorrent
  description: qbittorrent legacy api
  endpoint: {{ .Release.Name }}-svc.{{ .Release.Namespace }}:8001
  group: api.qbittorrent
  kind: provider
  namespace: {{ .Release.Namespace }}
  version: v1
status:
  state: active