{{- $cpDomainENV := split  ","  .Values.domain.clientproxyprivate -}}
{{- $cpDomain := index $cpDomainENV "_0" -}}

{{- $clientproxyDomainENV := split  ","  .Values.domain.clientproxy -}}
{{- $clientproxyDomain := index $clientproxyDomainENV "_0" -}}

{{- $serverproxyHost := printf "%s" (index .Values.svcs "serverproxy_host") -}}
{{- $serverproxyHostL := (split "." $serverproxyHost) -}}
{{- $serverproxyHostF := index $serverproxyHostL "_0" -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: clientproxy-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  password: {{ randAlphaNum 16 | b64enc }}

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: terminus-sidecar-config
  namespace: {{ .Release.Namespace }}
data:
  envoy.yaml: |
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 15000
    static_resources:
      clusters:
      - connect_timeout: 5000s
        name: original_dst
        type: ORIGINAL_DST
        lb_policy: CLUSTER_PROVIDED
      - connect_timeout: 5s
        dns_lookup_family: V4_ONLY
        dns_refresh_rate: 600s
        load_assignment:
          cluster_name: images
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: tapr-images-svc.user-system-{{ .Values.bfl.username }}
                    port_value: 8080
        name: images
        type: LOGICAL_DNS
      - connect_timeout: 0.250s
        dns_lookup_family: V4_ONLY
        dns_refresh_rate: 600s
        load_assignment:
          cluster_name: authelia
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: authelia-backend.user-system-{{ .Values.bfl.username }}
                    port_value: 9091
        name: authelia
        type: LOGICAL_DNS
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 15003
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              http_filters:
              - name: envoy.filters.http.ext_authz
                typed_config:
                  '@type': type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  http_service:
                    authorization_request:
                      allowed_headers:
                        patterns:
                        - exact: accept
                        - exact: cookie
                        - exact: proxy-authorization
                        - prefix: x-unauth-
                        - exact: x-authorization
                        - exact: terminus-nonce
                        - exact: x-bfl-user
                      headers_to_add:
                      - key: X-Forwarded-Method
                        value: '%REQ(:METHOD)%'
                      - key: X-Forwarded-Proto
                        value: '%REQ(:SCHEME)%'
                      - key: X-Forwarded-Host
                        value: '%REQ(:AUTHORITY)%'
                      - key: X-Forwarded-Uri
                        value: '%REQ(:PATH)%'
                      - key: X-Forwarded-For
                        value: '%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%'
                    authorization_response:
                      allowed_client_headers:
                        patterns:
                        - exact: set-cookie
                      allowed_upstream_headers:
                        patterns:
                        - exact: authorization
                        - exact: proxy-authorization
                        - prefix: remote-
                        - prefix: authelia-
                    path_prefix: /api/verify/
                    server_uri:
                      cluster: authelia
                      timeout: 0.250s
                      uri: authelia-backend.user-system-{{ .Values.bfl.username }}:9091
              - name: envoy.filters.http.router
                typed_config:
                  '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: local_route
                virtual_hosts:
                - domains:
                  - '*'
                  name: service
                  routes:
                  - match:
                      prefix: /
                    route:
                      cluster: original_dst
                      timeout: 180s
              stat_prefix: desktop_http
              upgrade_configs:
              - upgrade_type: websocket
              - upgrade_type: tailscale-control-protocol
        listener_filters:
        - name: envoy.filters.listener.original_dst
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst
        name: listener_0
---
kind: Service
apiVersion: v1
metadata:
  name: clientproxy
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      name: h8000
    - protocol: TCP
      port: 8001
      targetPort: 8001
      name: h8001
  selector:
    app: {{ .Release.Name }}-cp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlabfusionclient
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-cp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-cp
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-cp
    spec:
      volumes:
        - name: kube-api-access
          projected:
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
              - downwardAPI:
                  items:
                    - path: namespace
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
            defaultMode: 420
        - name: terminus-sidecar-config
          configMap:
            name: terminus-sidecar-config
            items:
              - key: envoy.yaml
                path: envoy.yaml
            defaultMode: 420
      initContainers:
        - name: terminus-sidecar-init
          image: 'docker.io/aboveos/openservicemesh-init:v1.2.3'
          command:
            - /bin/sh
          args:
            - '-c'
            - |
              iptables-restore --noflush <<EOF
              # sidecar interception rules
              *nat
              :PROXY_IN_REDIRECT - [0:0]
              :PROXY_INBOUND - [0:0]
              -A PROXY_IN_REDIRECT -p tcp ! --dport 8001 -j REDIRECT --to-port 15003
              -A PREROUTING -p tcp -j PROXY_INBOUND
              -A PROXY_INBOUND -p tcp --dport 15000 -j RETURN
              -A PROXY_INBOUND -p tcp -j PROXY_IN_REDIRECT
              COMMIT
              EOF
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          resources: {}
          volumeMounts:
            - name: kube-api-access
              readOnly: true
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
            runAsUser: 0
            runAsNonRoot: false
      containers:
        - name: gitlabfusion-cp
          image: 'beclab/gitlab-client-proxy:cf6f4973'
          ports:
            - name: ext-port
              containerPort: 8000
              protocol: TCP
            - name: ext-port2
              containerPort: 8001
              protocol: TCP
          env:
            - name: SERVER_PROXY_URL
              value: 'http://{{ index .Values.svcs "serverproxy_host" }}:8000'
            - name: SERVER_PROXY_DOMAIN
              value: '{{index .Values.svcs "serverproxy_host" }}'
            - name: SERVER_PROXY_DOMAIN_NO_NAMESPACE
              value: '{{ $serverproxyHostF }}'
            - name: SERVER_THIS_DOMAIN
              value: '{{ $clientproxyDomain }}'
            - name: SERVER_SSO_URL
              value: 'http://clientproxy:8000/'
            - name: SERVER_SSO_DOMAIN
              value: '{{ $cpDomain }}'
            - name: SERVER_ACCOUNT_MANAGER_URL
              value: 'http://{{index .Values.svcs "serverproxy_host" }}:4000'
            - name: SERVER_SRC_DOMAIN
              value: '{{index .Values.svcs "gitlab-nginx-ingress-controller_host" }}'
            - name: ACCOUNT_NAME
              value: '{{ .Values.bfl.username }}'
            - name: ACCOUNT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name:  clientproxy-secret
                  key: password
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
            limits:
              cpu: 1000m
              memory: 512Mi
        - name: terminus-envoy-sidecar
          image: 'docker.io/aboveos/envoyproxy-envoy-distroless:v1.25.1'
          command:
            - envoy
          args:
            - '--log-level'
            - debug
            - '-c'
            - /etc/envoy/envoy.yaml
            - '--service-cluster'
            - default.{{ .Release.Namespace }}
          ports:
            - name: proxy-admin
              containerPort: 15000
              protocol: TCP
            - name: proxy-inbound
              containerPort: 15003
              protocol: TCP
            - name: liveness-port
              containerPort: 15008
              protocol: TCP
          env:
            - name: POD_UID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.uid
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - name: terminus-sidecar-config
              readOnly: true
              mountPath: /etc/envoy/envoy.yaml
              subPath: envoy.yaml
            - name: kube-api-access
              readOnly: true
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1000
            allowPrivilegeEscalation: false