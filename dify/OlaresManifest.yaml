olaresManifest.version: '0.9.0'
olaresManifest.type: app
metadata:
  name: dify
  description: The Innovation Engine for GenAI Applications
  icon: https://file.bttcdn.com/appstore/dify/icon.png
  version: '1.1.2'
  title: Dify Shared
  categories:
  - Productivity
entrances:
- name: client
  port: 8080
  host: client
  title: Dify
  icon: https://file.bttcdn.com/appstore/dify/icon.png
permission:
  appData: true
  appCache: true
  userData:
    - Home  
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
  sysData:
  - dataType: legacy_ollama
    appName: ollama
    svc: ollama
    port: 11434
    group: api.ollama
    version: v2
    ops:
    - All
  - dataType: legacy_gaianetai
    appName: gaianetai
    svc: gaianetai
    port: 8080
    group: api.gaianetai
    version: v2
    ops:
    - All
  - dataType: legacy_whisper
    appName: whisper
    svc: whisper
    port: 8000
    group: api.whisper
    version: v2
    ops:
    - All
  - dataType: legacy_openedaispeech
    appName: openedaispeech
    svc: openedaispeech
    port: 8000
    group: api.openedaispeech
    version: v2
    ops:
    - All
  - dataType: legacy_sdwebui
    appName: sdwebui
    svc: sdwebui
    port: 7860
    group: api.sdwebui
    version: v2
    ops:
    - All
{{- end }}
spec:
  versionName: '1.1.0'
  featuredImage: https://file.bttcdn.com/appstore/dify/1.webp
  promoteImage:
  - https://file.bttcdn.com/appstore/dify/1.webp
  - https://file.bttcdn.com/appstore/dify/2.webp
  - https://file.bttcdn.com/appstore/dify/3.webp
  - https://file.bttcdn.com/appstore/dify/4.webp

  fullDescription: |
    ## IMPORTANT NOTE ##
    This is a shared version of Dify. Only one service will be installed across the entire Olares system. However, every user still needs to install an desktop entry to access and use the service installed by the Olares Admin.

    After installation, everyone on this Olares cluster can use the same application. This shared setup makes it easier for users to share information with each other, while reducing maintenance work and using fewer resources.

    ## Migration Note ##
    If you're using an older version of Dify, it might conflict with Dify v1.0 or later. We recommend backing up your data, uninstalling the old version, and then installing this latest version.

    ## OVERVIEW ##
    Dify is an open-source LLM app development platform. Its intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production. Here's a list of the core features:

    1. Workflow: Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.

    2. Comprehensive model support: Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found here.

    3. Prompt IDE: Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.

    4. RAG Pipeline: Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.

    5. Agent capabilities: You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DELL·E, Stable Diffusion and WolframAlpha.

    6. LLMOps: Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.

    7. Backend-as-a-Service: All of Dify's offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.
  upgradeDescription: |
    Upgrade to Dify v1.2.0

    What's New in v1.2.0
    New Workflow Loop Node: A huge shoutout to @Woo0ood, @arkunzz, @Gevtolev and @zxhlyh for dropping this game-changer in #14863, #17268 and #17273! The Loop Node feature maximizes efficiency in automation by allowing you to iterate over items in your workflows seamlessly. This is a big step forward in letting you do more with less. Kudos to the development team for making this happen!

    New Features
    - Childchunk API Added: Thanks to @ZeroZ-lab in #16094, we've introduced the childchunk API to enhance your workload flexibility.

    - OceanBase Hybrid Search: Courtesy of @hsiong in #16652, this feature integrates hybrid search capabilities within OceanBase, providing more robust query options.

    - Webapp Input Flexibility: Webapp now allows input changes after a conversation starts, by @JzoNgKVO in #16901.

    - Langfuse LLM Node: Input and output support are enhanced by @ZhouhaoJiang in #16924.

    - Tablestore Vector Database Support: By @wanttobeamaster in #16601—it's like giving your data superpowers!

    - WaterCrawl.dev Integration: Thanks to @amirasaran in #16396, this is now available as a new knowledge base provider.

    - Plugin Daemon OSS Env Config: By @quicksandznzn in #17663, enhancing your plugin management.

    Enhancements
    - Metadata Fixes & Optimizations: We've got metadata variable value fixes by @JohnJyong in #16665 and metadata filter improvements from various contributors. Your data management is smoother than ever!

    - UI/UX Improvements: Whether it’s fixing layout issues on mobile (thanks, @LeeeeeeM in #16793!) or improving text spacing on charts (@ACAne0320, #16894), we’re committed to a slicker experience.

    - Multilingual Support: Added jp_ja for the knowledge API by @crazywoola and supported Tablestore vector database—a shout-out to our international users.

    - UI Consistency Tweaks: Little UI adjustments for a big impact, like updating border radius for dropdowns and other forms, thanks to our vigilant community contributors.

    - Security & Efficiency: Fixes like the provider credentials load error by @liuzhenghua ensure the platform's robust performance. Also, optimizing the database workflow app log index has been another focus area.

    - Additional Fixes: Addressing multiple translation gaps, account errors, and something as specific as the Function's Name Mismatch by @hyongtao-db—keeping us refined!

    - Education API Introduction: By @GareArc in #17168, we’re aiming to broaden horizons with educational integrations.

    And many bug fixes

    View full release note at: https://github.com/langgenius/dify/releases/tag/1.2.0

  developer: LangGenius
  website: https://dify.ai/
  locale:
  - en-US
  - zh-CN
  sourceCode: https://github.com/langgenius/dify
  submitter: Olares
  doc: https://github.com/langgenius/dify#readme
  license:
  - text: Apache-2.0
    url: https://github.com/langgenius/dify?tab=License-1-ov-file#readme
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
  requiredMemory: 2200Mi
  limitedMemory: 12.5Gi
  requiredDisk: 512Mi
  limitedDisk: 50Gi
  requiredCpu: 1
  limitedCpu: 8
{{- else }}
  requiredMemory: 64Mi
  limitedMemory: 256Mi
  requiredDisk: 1Mi
  limitedDisk: 100Mi
  requiredCpu: 10m
  limitedCpu: 100m
{{- end }}
  supportArch:
  - amd64
  - arm64
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
middleware:
  redis:
    namespace: dify
  postgres:
    username: dify
    password: dify
    databases:
    - name: dify
      distributed: true
    - name: difyplugin
      distributed: true
{{- end }}
options:
  allowedOutboundPorts:
  - 3128
  apiTimeout: 0
  conflicts:
  - name: difyfusion
    type: application
  - name: difyfusionclient
    type: application  
  dependencies:
  - name: olares
    type: system
    version: '>=1.11.6-0'
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
{{- else}}
  - name: dify
    type: application
    version: '>=1.1.0'
    mandatory: true
{{- end }}
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
  appScope:
    clusterScoped: true
    appRef:
    - dify
{{- end }}

  # For external access to Dify, use the following configuration.
  # policies:
  #   - uriRegex: ^/(activate|_next|logo|favicon|console/api/activate/check|signin)
  #     level: public
  #     oneTime: false
  #     validDuration: 3600s
  #     entranceName: client

