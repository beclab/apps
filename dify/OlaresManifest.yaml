olaresManifest.version: '0.9.0'
olaresManifest.type: app
metadata:
  name: dify
  description: The Innovation Engine for GenAI Applications
  icon: https://file.bttcdn.com/appstore/dify/icon.png
  version: '1.1.6'
  title: Dify Shared
  categories:
  - Productivity
entrances:
- name: client
  port: 8080
  host: client
  title: Dify
  icon: https://file.bttcdn.com/appstore/dify/icon.png
  openMethod: window
permission:
  appData: true
  appCache: true
  userData:
    - Home  
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
  sysData:
  - dataType: legacy_ollama
    appName: ollama
    svc: ollama
    port: 11434
    group: api.ollama
    version: v2
    ops:
    - All
  - dataType: legacy_gaianetai
    appName: gaianetai
    svc: gaianetai
    port: 8080
    group: api.gaianetai
    version: v2
    ops:
    - All
  - dataType: legacy_whisper
    appName: whisper
    svc: whisper
    port: 8000
    group: api.whisper
    version: v2
    ops:
    - All
  - dataType: legacy_openedaispeech
    appName: openedaispeech
    svc: openedaispeech
    port: 8000
    group: api.openedaispeech
    version: v2
    ops:
    - All
  - dataType: legacy_sdwebui
    appName: sdwebui
    svc: sdwebui
    port: 7860
    group: api.sdwebui
    version: v2
    ops:
    - All
{{- end }}
spec:
  versionName: '1.3.0'
  featuredImage: https://file.bttcdn.com/appstore/dify/1.webp
  promoteImage:
  - https://file.bttcdn.com/appstore/dify/1.webp
  - https://file.bttcdn.com/appstore/dify/2.webp
  - https://file.bttcdn.com/appstore/dify/3.webp
  - https://file.bttcdn.com/appstore/dify/4.webp

  fullDescription: |
    ## IMPORTANT NOTE ##
    This is a shared version of Dify. Only one service will be installed across the entire Olares system. However, every user still needs to install an desktop entry to access and use the service installed by the Olares Admin.

    After installation, everyone on this Olares cluster can use the same application. This shared setup makes it easier for users to share information with each other, while reducing maintenance work and using fewer resources.

    ## Migration Note ##
    If you're using an older version of Dify, it might conflict with Dify v1.0 or later. We recommend backing up your data, uninstalling the old version, and then installing this latest version.

    ## OVERVIEW ##
    Dify is an open-source LLM app development platform. Its intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production. Here's a list of the core features:

    1. Workflow: Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.

    2. Comprehensive model support: Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found here.

    3. Prompt IDE: Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.

    4. RAG Pipeline: Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.

    5. Agent capabilities: You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DELLÂ·E, Stable Diffusion and WolframAlpha.

    6. LLMOps: Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.

    7. Backend-as-a-Service: All of Dify's offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.
  upgradeDescription: |
    Upgrade to Dify v1.3.0

    What's New in v1.3.0

    New Features
    - Structured Output in LLM Node: We've introduced structured output support for the LLM Node. This means your language models can now return neatly organized and easily processable data. Backend implementation by @Nov1c444 in #17877 and frontend magic by @iamjoel in #17994 ensure this feature is seamless and powerful for developers.

    - Never Miss a Plugin Update: Our new feature ensures you're always in the loop. When a new version of a plugin drops, you'll see a clear indicator right in the UI. This keeps your environment up-to-date and running smoothly, thanks to @Yeuoly in #17695.

    - Token Counting Made Easy: We've tweaked the default token counting rules. Now, if your provider doesn't return token usage, we'll default to using 0. However, if you'd like to estimate using the tokenizer, you can set PLUGIN_BASED_TOKEN_COUNTING_ENABLED=true. Heads up, this might impact performance, detailed by @laipz8200 in #17706.

    - Workflow Export Delight: Ever wanted to share your workflow effortlessly? You can now export it as an image with the slick new feature from @ACAne0320 in #17904.

    - Mermaid Analysis Gets Smarter: Optimization magic was done on Mermaid by @charli117 in #18089 for all you diagram enthusiasts out there.

    Enhancements
    - Python Package Manager Upgrade: We made a significant switch from poetry to uv as our Python package manager. This speeds up operations, minimizes merge conflicts, and streamlines our development process. Huge thanks to @bowenliang123 for leading this transition in #16317.

    - Slick Shortcuts & Indicators: Consistent keyboard shortcut support and handy visual indicators have been rolled into all app creation dialogs thanks to @ACAne0320 in #17138. Speed and efficiency now go hand in hand.

    - Observability on Steroids: Integrated OpenTelemetry for better observability in workflows by @TedaLIEz in #17627 and beefed it up with HTTP metrics in HTTP response handling.

    - Type Safety Surge: Massive improvements on type safety in components like PluginList by @samuel871211 in #17498. Our internals are as tight as ever!

    And many bug fixes

    View full release note at: https://github.com/langgenius/dify/releases/tag/1.3.0

  developer: LangGenius
  website: https://dify.ai/
  locale:
  - en-US
  - zh-CN
  sourceCode: https://github.com/langgenius/dify
  submitter: Olares
  doc: https://github.com/langgenius/dify#readme
  license:
  - text: Apache-2.0
    url: https://github.com/langgenius/dify?tab=License-1-ov-file#readme
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
  requiredMemory: 2200Mi
  limitedMemory: 12.5Gi
  requiredDisk: 512Mi
  limitedDisk: 50Gi
  requiredCpu: 1
  limitedCpu: 8
{{- else }}
  requiredMemory: 64Mi
  limitedMemory: 256Mi
  requiredDisk: 1Mi
  limitedDisk: 100Mi
  requiredCpu: 10m
  limitedCpu: 100m
{{- end }}
  supportArch:
  - amd64
  - arm64
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
middleware:
  redis:
    namespace: dify
  postgres:
    username: dify
    password: dify
    databases:
    - name: dify
      distributed: true
    - name: difyplugin
      distributed: true
{{- end }}
options:
  allowedOutboundPorts:
  - 3128
  apiTimeout: 0
  conflicts:
  - name: difyfusion
    type: application
  - name: difyfusionclient
    type: application  
  dependencies:
  - name: olares
    type: system
    version: '>=1.11.6-0'
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
{{- else}}
  - name: dify
    type: application
    version: '>=1.1.0'
    mandatory: true
{{- end }}
{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
  appScope:
    clusterScoped: true
    appRef:
    - dify
{{- end }}

  # For external access to Dify, use the following configuration.
  # policies:
  #   - uriRegex: ^/(activate|_next|logo|favicon|console/api/activate/check|signin)
  #     level: public
  #     oneTime: false
  #     validDuration: 3600s
  #     entranceName: client

