{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: nginx
  name: dify
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nginx
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: nginx
    spec:
      containers:
        - command:
            - sh
            - -c
            - "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh"
          env:
            - name: CERTBOT_DOMAIN
            - name: NGINX_CLIENT_MAX_BODY_SIZE
              value: 15M
            - name: NGINX_ENABLE_CERTBOT_CHALLENGE
              value: "false"
            - name: NGINX_HTTPS_ENABLED
              value: "false"
            - name: NGINX_KEEPALIVE_TIMEOUT
              value: "65"
            - name: NGINX_PORT
              value: "80"
            - name: NGINX_PROXY_READ_TIMEOUT
              value: 3600s
            - name: NGINX_PROXY_SEND_TIMEOUT
              value: 3600s
            - name: NGINX_SERVER_NAME
              value: _
            - name: NGINX_SSL_CERT_FILENAME
              value: dify.crt
            - name: NGINX_SSL_CERT_KEY_FILENAME
              value: dify.key
            - name: NGINX_SSL_PORT
              value: "443"
            - name: NGINX_SSL_PROTOCOLS
              value: TLSv1.1 TLSv1.2 TLSv1.3
            - name: NGINX_WORKER_PROCESSES
              value: auto
          image: nginx:latest
          name: nginx
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf.template
              name: nginx-cm0
              subPath: nginx.conf.template
            - mountPath: /etc/nginx/proxy.conf.template
              name: nginx-cm1
              subPath: proxy.conf.template
            - mountPath: /etc/nginx/https.conf.template
              name: nginx-cm2
              subPath: https.conf.template
            - mountPath: /etc/nginx/conf.d/default.conf.template
              name: nginx-cm3
              subPath: default.conf.template
            - mountPath: /docker-entrypoint-mount.sh
              name: nginx-cm4
              subPath: docker-entrypoint-mount.sh
            - mountPath: /etc/ssl
              name: nginx-cm5
            - mountPath: /etc/letsencrypt/live
              name: nginx-claim6
            - mountPath: /etc/letsencrypt
              name: nginx-claim7
            - mountPath: /var/www/html
              name: nginx-claim8
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: nginx.conf.template
                path: nginx.conf.template
            name: nginx-cm0
          name: nginx-cm0
        - configMap:
            items:
              - key: proxy.conf.template
                path: proxy.conf.template
            name: nginx-cm1
          name: nginx-cm1
        - configMap:
            items:
              - key: https.conf.template
                path: https.conf.template
            name: nginx-cm2
          name: nginx-cm2
        - configMap:
            items:
              - key: default.conf.template
                path: default.conf.template
            name: nginx-cm3
          name: nginx-cm3
        - configMap:
            items:
              - key: docker-entrypoint.sh
                path: docker-entrypoint-mount.sh
            name: nginx-cm4
          name: nginx-cm4
        - configMap:
            name: nginx-cm5
          name: nginx-cm5
        - name: nginx-claim6
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appCache }}/dify/volumes/nginx/claim6
        - name: nginx-claim7
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appCache }}/dify/volumes/nginx/claim7
        - name: nginx-claim8
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appCache }}/dify/volumes/nginx/claim8
{{- end }}