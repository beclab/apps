{{- if and .Values.admin .Values.bfl.username (eq .Values.admin .Values.bfl.username) }}
{{- $whisperwebuiDomainENV := split "," .Values.domain.whisperwebui -}}
{{- $whisperwebuiDomain := index $whisperwebuiDomainENV "_0" -}}
{{- $localDomain := $whisperwebuiDomain -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whisperwebui
  namespace: {{ .Release.Namespace }}
  labels:
    app: whisperwebui
  annotations:
    applications.app.bytetrade.io/gpu-inject: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whisperwebui
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: whisperwebui
    spec:
      initContainers:
        - name: init-configs
          image: harveyff/whisper-webui:v1.0.6
          command:
            - sh
            - -c
            - |
              if [ -z "$(ls -A /Whisper-WebUI/configs)" ]; then
                echo "configs directory is empty, copying default configs..."
                cp -r /Whisper-WebUI/configs_default/* /Whisper-WebUI/configs/
              else
                echo "configs directory already has content, skipping copy."
              fi
          volumeMounts:
            - name: configs
              mountPath: /Whisper-WebUI/configs
      containers:
        - name: whisperwebui
          image: harveyff/whisper-webui:v1.0.6
          envFrom:
            - configMapRef:
                name: whisperwebui-config
          command:
            - sh
            - "-c"
            - |
              {{- if and (hasKey .Values "models") (gt (len .Values.models) 0) }}
              {{- range $i, $model := .Values.models }}
              while [ ! -f /Whisper-WebUI/models/.success.{{ $model.name }} ]; do
                echo "Waiting for model file /Whisper-WebUI/models/.success.{{ $model.name }} ..."
                sleep 5
              done
              {{- end }}
              echo "All model files are ready."
              {{- end }}
              echo "Starting application..."
              python app.py --server_port 7860 --server_name 0.0.0.0 --whisper_type "$whisper_type"
          ports:
            - containerPort: 7860
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          resources:
            requests:
              cpu: "500m"
              memory: 6Gi
            limits:
              cpu: "4"
              memory: 12Gi
          volumeMounts:
            - name: models
              mountPath: /Whisper-WebUI/models
            - name: outputs
              mountPath: /Whisper-WebUI/outputs
            - name: configs
              mountPath: /Whisper-WebUI/configs
          securityContext:
            runAsUser: 0
      volumes:
        - name: models
          hostPath:
            path: "{{ .Values.sharedlib }}/ai/{{ .Release.Name }}"
            type: DirectoryOrCreate
        - name: outputs
          hostPath:
            path: "{{ .Values.sharedlib }}/ai/output/{{ .Release.Name }}"
            type: DirectoryOrCreate
        - name: configs
          hostPath:
            path: "{{ .Values.userspace.appData }}/{{ .Release.Name }}/configs"
            type: DirectoryOrCreate
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-download-models
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-downloadmodels
spec:
  ttlSecondsAfterFinished: 100
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-downloadmodels
    spec:
      containers:
        - name: {{ .Release.Name }}-downloadmodels
          image: beclab/downloader-init:v0.1.0
          ports:
            - containerPort: 8090
          envFrom:
            - configMapRef:
                name: whisperwebui-config
          command: ["sh", "-c"]
          args:
            - |
              {{- range $i, $model := .Values.models }}
              echo "${CDN_HOST}/{{ $model.name }} {{ $model.output }} {{ $model.md5 }}" {{ if eq $i 0 }} > {{ else }} >> {{ end }} /app/tasks/tasks.txt && \
              {{- end }}
              /app/downloader-init /app/tasks/tasks.txt 8090 1 Whisper-WebUI https://{{ $whisperwebuiDomain }}/config && \
              echo "Download finished..."
          resources:
            requests:
              cpu: "500m"
              memory: "500Mi"
            limits:
              cpu: "1"
              memory: 1Gi
          volumeMounts:
            - name: downloader-tmp-vol
              mountPath: /app/downloader-tmp
            - name: downloads-vol
              mountPath: /app/downloads
            - name: tasks-txt-vol
              mountPath: /app/tasks
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
      volumes:
        - name: downloader-tmp-vol
          hostPath:
            path: "{{ .Values.sharedlib }}/ai/{{ .Release.Name }}/download/temp"
            type: DirectoryOrCreate
        - name: downloads-vol
          hostPath:
            path: "{{ .Values.sharedlib }}/ai/{{ .Release.Name }}"
            type: DirectoryOrCreate
        - name: tasks-txt-vol
          emptyDir: {}
      restartPolicy: OnFailure
---
apiVersion: v1
kind: Service
metadata:
  name: whisperwebui-svc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: whisperwebui
  ports:
    - name: api
      port: 7860
      targetPort: 7860
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: download-svc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ .Release.Name }}-downloadmodels
  ports:
    - name: download-status
      port: 8090
      targetPort: 8090
  type: ClusterIP
{{- end }}
