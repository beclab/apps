{{- $acestepDomainENV := split "," .Values.domain.acestep -}}
{{- $acestepDomain := index $acestepDomainENV "_0" -}}
{{- $localDomain := $acestepDomain -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: acestep
  namespace: {{ .Release.Namespace }}
  labels:
    app: multi-port
  annotations:
    applications.app.bytetrade.io/gpu-inject: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: multi-port
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: multi-port
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: download-models
          image: beclab/downloader-init:v0.0.11
          ports:
            - containerPort: 8090
          envFrom:
            - configMapRef:
                name: acestep-config
          command: ["sh", "-c"]
          args:
            - |
              echo "$CDN_HOST/$MODEL_NAME $MODEL_OUTPUT_PATH $MODEL_MD5" > /app/tasks/tasks.txt && \
              /app/downloader-init /app/tasks/tasks.txt 8090 1 ACE-Step https://{{$acestepDomain}}/gradio_api/info && \
              echo "Download finished, keeping container alive..." && \
              tail -f /dev/null
          resources:
            requests:
              cpu: "500m"
              memory: "500Mi"
            limits:
              cpu: "1"
              memory: 1Gi
          volumeMounts:
            - name: downloader-tmp-vol
              mountPath: /app/downloader-tmp
            - name: downloads-vol
              mountPath: /app/downloads
            - name: tasks-txt-vol
              mountPath: /app/tasks
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
        - name: acestep
          image: harveyff/acestep:v1.1.1
          ports:
            - containerPort: 7865
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          envFrom:
            - configMapRef:
                name: acestep-config
          command:
            - sh
            - -c
            - |
              while [ ! -f /root/.cache/ace-step/.success.$MODEL_NAME ]; do
                echo "Waiting for model file /root/.cache/ace-step/.success.$MODEL_NAME ..."
                sleep 5
              done
              echo "Model ready. Starting application..."
              python3 acestep/gui.py --server_name 0.0.0.0 --bf16 true
      
          resources:
            requests:
              cpu: "500m"
              memory: 2Gi
            limits:
              cpu: "4"
              memory: 16Gi
          volumeMounts:
            - name: checkpoints
              mountPath: /root/.cache/ace-step
            - name: outputs
              mountPath: /app/outputs
            - name: logs
              mountPath: /app/exps/logs
          securityContext:
            runAsUser: 0
      volumes:
        - name: checkpoints
          hostPath:
            path: "{{ .Values.sharedlib }}/ai/{{ .Release.Name }}"
            type: DirectoryOrCreate
        - name: outputs
          hostPath:
            path: "{{ .Values.userspace.userData }}/AI/output/{{ .Release.Name }}"
            type: DirectoryOrCreate
        - name: logs
          hostPath:
            path: "{{ .Values.userspace.appData }}/acestep/logs"
            type: DirectoryOrCreate
        - name: downloader-tmp-vol
          hostPath:
            path: "{{ .Values.sharedlib }}/ai/{{ .Release.Name }}/download/temp"
            type: DirectoryOrCreate
        - name: downloads-vol
          hostPath:
            path: "{{ .Values.sharedlib }}/ai/{{ .Release.Name }}"
            type: DirectoryOrCreate
        - name: tasks-txt-vol
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: acestep-svc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: multi-port
  ports:
    - name: main-api
      port: 7865
      targetPort: 7865
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: download-svc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: multi-port
  ports:
    - name: download-status
      port: 8090
      targetPort: 8090
  type: ClusterIP
