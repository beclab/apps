kind: Deployment
apiVersion: apps/v1
metadata:
  name: chartmuseum
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: chartmuseum
      app.kubernetes.io/name: chartmuseum
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: chartmuseum
        app.kubernetes.io/name: chartmuseum
    spec:
      volumes:
        - name: storage-volume
          hostPath:
            path: {{ .Values.userspace.userData }}/helm-repo-dev
            type: DirectoryOrCreate
      initContainers:
        - name: init-chmod-data
          image: 'docker.io/aboveos/busybox:latest'
          command:
            - sh
            - '-c'
            - |
              chown -R 1000:1000 /home/coder
          resources: {}
          volumeMounts:
            - name: storage-volume
              mountPath: /home/coder
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
      containers:
        - name: chartmuseum
          image: 'docker.io/aboveos/helm-chartmuseum:v0.15.0'
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          args:
            - '--port=8080'
            - '--storage-local-rootdir=/storage'
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: CHART_POST_FORM_FIELD_NAME
              value: chart
            - name: DISABLE_API
              value: 'false'
            - name: LOG_JSON
              value: 'true'
            - name: PROV_POST_FORM_FIELD_NAME
              value: prov
            - name: STORAGE
              value: local
          volumeMounts:
            - name: storage-volume
              mountPath: /storage
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
---
kind: Service
apiVersion: v1
metadata:
  name: chartmuseum
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
  selector:
    app.kubernetes.io/instance: chartmuseum
    app.kubernetes.io/name: chartmuseum