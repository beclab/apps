apiVersion: v1
kind: ConfigMap
metadata:
  name: config-scripts
  namespace: {{ .Release.Namespace }}
data:
  copy-config.sh: |
    #!/bin/bash

    new_dir="/config-new"
    source_dir="/config"

    if [ -z "$(ls -A $new_dir)" ]; then
        echo "Directory $new_dir is empty. Copying contents from $source_dir..."
        cp -r $source_dir/* $new_dir
        echo "Contents copied successfully."
    else
        echo "Directory $new_dir is not empty, no action needed."
    fi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      volumes:
        - name: home
          hostPath:
            type: Directory
            path: {{ .Values.userspace.userData }}
        - hostPath:
            path: '{{ .Values.userspace.appData }}/jellyfin/config'
            type: DirectoryOrCreate
          name: config
        - hostPath:
            path: '{{ .Values.userspace.appData }}/jellyfin/cache'
            type: DirectoryOrCreate
          name: cache
        - name: config-scripts
          configMap:
            name: config-scripts
            defaultMode: 438
            items:
            - key: copy-config.sh
              path: copy-config.sh
      initContainers:
        - name: init-chmod-data
          image: 'docker.io/aboveos/busybox:latest'
          command:
            - sh
            - '-c'
            - |
              chown -R 1000:1000 /home
          resources: {}
          volumeMounts:
            - name: home
              mountPath: /home
          securityContext:
            runAsUser: 0
        - name: init-config
          image: docker.io/aboveos/jellyfin-jellyfin:latest
          resources: {}
          command: ["/bin/bash", "-c", "chmod +x /scripts/copy-config.sh & bash /scripts/copy-config.sh"]
          volumeMounts:
          - name: config
            mountPath: /config-new
          - name: config-scripts
            mountPath: /scripts/copy-config.sh
            subPath: copy-config.sh
          securityContext:
            runAsUser: 0
      containers:
        - name: jellyfin
          image: docker.io/aboveos/jellyfin-jellyfin:latest
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 4000m
              memory: 4Gi
          ports:
          - containerPort: 8096
          volumeMounts:
          - name: home
            mountPath: /home
          - name: config
            mountPath: /config
          - name: cache
            mountPath: /cache
          env:
          - name: PGID
            value: "1000" 
          - name: PUID
            value: "1000" 
          - name: UMASK
            value: "002" 
          - name: TZ
            value: Etc/UTC
          

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 8096
      targetPort: 8096
      
---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: {{ .Release.Name }}
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: legacy_api
  deployment: {{ .Release.Name }}
  description: {{ .Release.Name }} legacy api
  endpoint: {{ .Release.Name }}-svc.{{ .Release.Namespace }}:8096
  group: api.jellyfin
  kind: provider
  namespace: {{ .Release.Namespace }}
  version: v1
status:
  state: active