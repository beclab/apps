---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: blinko
  name: blinko
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: blinko
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/chrome-default: "true"
        io.kompose.service: blinko
    spec:
      containers:
      - env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: Etc/UTC
        - name: DATABASE_URL
          value: "postgres://{{ .Values.postgres.username }}:{{ .Values.postgres.password }}@{{ .Values.postgres.host }}:{{ .Values.postgres.port }}/{{ .Values.postgres.databases.blinko }}"
        - name: NODE_ENV
          value: production
        - name: NEXTAUTH_SECRET
          value: ""
        image: blinkospace/blinko:1.2.2
        name: blinko
        ports:
        - name: blinko
          containerPort: 1111
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 1Gi
        volumeMounts:
        - mountPath: /app/.blinko 
          name: data
      restartPolicy: Always
      volumes:
      - hostPath:
          path: '{{ .Values.userspace.appData }}/{{ .Release.Name }}/data'
          type: DirectoryOrCreate
        name: data
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: blinko
  name: blinko-svc
  namespace: '{{ .Release.Namespace }}'
spec:
  ports:
  - name: "blinko"
    port: 1111
    targetPort: 1111
  selector:
    io.kompose.service: blinko
status:
  loadBalancer: {}
