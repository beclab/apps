{{- $n8nDomainENV := split  ","  .Values.domain.n8n -}}
{{- $n8nDomain := index $n8nDomainENV "_0" -}}

---
apiVersion: v1
kind: Service
metadata:
  name: n8n
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: n8n
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: {{ .Release.Namespace }}
  labels:
    app: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      volumes:
      - name: n8n-config
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.appData}}/n8n/
      containers:
      - name: n8n
        image: n8nio/n8n:latest
        resources:
          requests:
            cpu: 300m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 1.5Gi
        ports:
        - containerPort: 80
        env:
          - name: N8N_PORT
            value: '80'
          - name: N8N_PUSH_BACKEND
            value: websocket
          - name: N8N_HOST
            value: {{ $n8nDomain }}
          - name: DB_TYPE
            value: postgresdb
          - name: DB_POSTGRESDB_DATABASE
            value: "{{ .Values.postgres.databases.n8n }}"
          - name: DB_POSTGRESDB_HOST
            value: "{{ .Values.postgres.host }}"
          - name: DB_POSTGRESDB_PORT
            value: "{{ .Values.postgres.port }}"
          - name: DB_POSTGRESDB_USER
            value: "{{ .Values.postgres.username }}"
          - name: DB_POSTGRESDB_PASSWORD
            value: "{{ .Values.postgres.password }}"
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
        volumeMounts:
        - mountPath: /home/node/
          name: n8n-config
