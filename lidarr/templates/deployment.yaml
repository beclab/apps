apiVersion: v1
data:
  init.sh: |
    #!/bin/bash

    source_dir="/config"
    dest_dir="/new-config"

    if [ -z "$(ls -A $dest_dir)" ]; then
      echo "$dest_dir is empty. Copying files from $source_dir..."
      cp -r $source_dir/. $dest_dir
      echo "Files copied successfully."
    else
      echo "$dest_dir is not empty. No action taken."
    fi
kind: ConfigMap
metadata:
  name: init-config
  namespace: {{ .Release.Namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: lidarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lidarr
  template:
    metadata:
      labels:
        app: lidarr
    spec:
      initContainers:
      - env:
        - name: PGID
          value: "1000" 
        - name: PUID
          value: "1000" 
        - name: TZ
          value: Europe/London
        name: lidarr-init-data
        image: docker.io/aboveos/linuxserver-lidarr:version-2.4.3.4248
        command:
          - sh
          - '-c'
          - |
            chmod +x /init.sh & bash /init.sh
        resources:
          requests:
            cpu: 100m
            memory: 32Mi
          limits:
            cpu: 1000m
            memory: 256Mi
        ports:
        - containerPort: 8686
        volumeMounts:
        - mountPath: /new-config
          name: lidarr-config
        - name: init-config 
          mountPath: /init.sh
          subPath: init.sh
      containers:
      - name: lidarr
        image: docker.io/aboveos/linuxserver-lidarr:version-2.4.3.4248
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: PGID
          value: "1000" 
        - name: PUID
          value: "1000" 
        - name: TZ
          value: Europe/London
        ports:
        - containerPort: 8686
        volumeMounts:
        - mountPath: /config
          name: lidarr-config
        - mountPath: /home
          name: home
      volumes:
      - name: lidarr-config
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.appData }}/lidarr 
      - name: home
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.userData }}           
      - name: init-config
        configMap:
          name: init-config
          defaultMode: 438
          items:
          - key: init.sh
            path: init.sh
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 8686
      targetPort: 8686

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: legacy-{{ .Release.Name }}
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: legacy_{{ .Release.Name }}
  deployment: {{ .Release.Name }}
  description: {{ .Release.Name }} legacy api
  endpoint: {{ .Release.Name }}-svc.{{ .Release.Namespace }}:8686
  group: api.{{ .Release.Name }}
  kind: provider
  namespace: {{ .Release.Namespace }}
  version: v2
  opApis:
  - name: All
    uri: /
status:
  state: active      