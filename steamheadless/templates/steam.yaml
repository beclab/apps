{{- $ipfsDomainENV := split  ","  .Values.domain.steamheadlessaudio -}}
{{- $webDomain := index $ipfsDomainENV "_0" -}}

{{- $parts := split "." $webDomain }}
{{- $subdomain := index $parts "_0" }}
{{- $subdomain2 := split  $subdomain  .Values.domain.steamheadlessaudio -}}

{{- $domain := index $subdomain2 "_0" }}
{{- $domain2 := index $subdomain2 "_1" }}

{{- $newWebDomain := printf "%s.local%s" $subdomain $domain2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-steam-headless.yml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: steam-headless
  name: steamheadless
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: steam-headless
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-steam-headless.yml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: steam-headless
    spec:
      containers:
        - env:
            - name: NAME
              value: SteamHeadless
            - name: TZ
              value: America/New_York
            - name: USER_LOCALES
              value: en_US.UTF-8 UTF-8
            - name: DISPLAY
              value: ':55'
            - name: SHM_SIZE
              value: 2G
            - name: DOCKER_RUNTIME
              value: nvidia
            - name: PUID
              value: '0'
            - name: PGID
              value: '0'
            - name: UMASK
              value: '000'
            - name: USER_PASSWORD
              value: password
            - name: MODE
              value: primary
            - name: WEB_UI_MODE
              value: vnc
            - name: ENABLE_VNC_AUDIO
              value: 'true'
            - name: PORT_AUDIO_WEBSOCKET
              value: "8088"
            - name: DOMAIN_AUDIO_WEBSOCKET
              value: {{ $newWebDomain }}
            - name: PORT_NOVNC_WEB
              value: '8083'
            - name: NEKO_NAT1TO1
            - name: ENABLE_SUNSHINE
              value: 'true'
            - name: SUNSHINE_USER
              value: sam
            - name: SUNSHINE_PASS
              value: password
            - name: ENABLE_STEAM
              value: 'true'
            - name: ENABLE_EVDEV_INPUTS
              value: 'true'
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: all
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
          image: bytetrade/steam-headless:v0.1.0
          ports:
          - containerPort: 8083
          - containerPort: 8088
          resources:
            requests:
              cpu: 2
              memory: 4Gi
            limits:
              cpu: 8
              memory: 64Gi
          name: steam-headless
          securityContext:
            privileged: true
            runAsUser: 0
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_NICE
          volumeMounts:
            - name: steam-headless-claim0
              mountPath: /home/default
            - name: steam-headless-claim1
              mountPath: /mnt/games
            - name: input-devices
              mountPath: /dev/input/
            - name: dshm
              mountPath: /dev/shm
      restartPolicy: Always
      volumes:
        - name: steam-headless-claim0
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appCache }}/steam-headless/c0
        - name: steam-headless-claim1
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appCache }}/steam-headless/c1
        - name: input-devices
          hostPath:
            path: /dev/input/
            type: ''
        - name: dshm
          emptyDir:
            medium: Memory
      securityContext:
        runAsUser: 0
---
apiVersion: v1
kind: Service
metadata:
  name: steamheadless
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    io.kompose.service: steam-headless
  ports:
    - name: steamheadless
      protocol: TCP
      port: 8083
      targetPort: 8083
---
apiVersion: v1
kind: Service
metadata:
  name: steamheadlessaudio
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    io.kompose.service: steam-headless
  ports:
    - name: steamheadlessaudio
      protocol: TCP
      port: 8088
      targetPort: 8088