---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Release.Namespace }}
data:
  nginx.conf: |
    worker_processes auto;

    events {
      worker_connections 10240;
    }

    http {
      include       mime.types;
      default_type  application/octet-stream;
      sendfile      on;
      keepalive_timeout 65;

      client_max_body_size 200m;

      proxy_connect_timeout 600s;
      proxy_send_timeout    60s;
      proxy_read_timeout   300s;

      include /opt/bitnami/openresty/nginx/conf/fastcgi_params;
      include /opt/bitnami/openresty/nginx/conf/server_blocks/*.conf;
    }

  server.conf: |
    server {
      listen 8080;
      access_log /opt/bitnami/openresty/nginx/logs/access.log;
      error_log  /opt/bitnami/openresty/nginx/logs/error.log;

      proxy_set_header Host              $host;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For   $remote_addr;

      location / {
        if ($request_method = OPTIONS) {
          add_header Access-Control-Allow-Origin $http_origin always;
          add_header Access-Control-Allow-Credentials true always;
          add_header Access-Control-Allow-Methods "GET,POST,PUT,DELETE,OPTIONS" always;
          add_header Access-Control-Allow-Headers "$http_access_control_request_headers" always;
          add_header Access-Control-Max-Age 86400 always;
          add_header Vary "Origin, Access-Control-Request-Method, Access-Control-Request-Headers" always;
          return 204;
        }

        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Vary "Origin, Access-Control-Request-Method, Access-Control-Request-Headers" always;

        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;

        proxy_http_version 1.1;
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass http://heygem-svc:18180;
      }

      location /video {
        if ($request_method = OPTIONS) {
          add_header Access-Control-Allow-Origin $http_origin always;
          add_header Access-Control-Allow-Credentials true always;
          add_header Access-Control-Allow-Methods "GET,POST,PUT,DELETE,OPTIONS" always;
          add_header Access-Control-Allow-Headers "$http_access_control_request_headers" always;
          add_header Access-Control-Max-Age 86400 always;
          add_header Vary "Origin, Access-Control-Request-Method, Access-Control-Request-Headers" always;
          return 204;
        }

        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Vary "Origin, Access-Control-Request-Method, Access-Control-Request-Headers" always;

        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;

        proxy_http_version 1.1;
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass http://heygemgenvideo-svc:8383/;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heygemproxy
  namespace: {{ .Release.Namespace }}
  labels:
    io.kompose.service: heygemproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: heygemproxy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/chrome-default: "true"
        io.kompose.service: heygemproxy
    spec:
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
            defaultMode: 0444
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: server.conf
                path: server_blocks/server.conf
      containers:
        - name: nginx
          image: docker.io/aboveos/bitnami-openresty:1.25.3-2
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: OPENRESTY_CONF_FILE
              value: /etc/nginx/nginx.conf
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/)
                  [ "$code" -eq 204 ] || [ "$code" -ge 200 -a "$code" -lt 500 ]
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 240
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-config
              mountPath: /opt/bitnami/openresty/nginx/conf/server_blocks/server.conf
              subPath: server_blocks/server.conf
---
apiVersion: v1
kind: Service
metadata:
  name: heygem-proxy-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    io.kompose.service: heygemproxy
  ports:
    - name: heygemproxy
      protocol: TCP
      port: 8080
      targetPort: 8080
