kind: ConfigMap
apiVersion: v1
metadata:
  name: geth
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: geth
    app.kubernetes.io/name: geth
data:
  geth.toml: |
    [Node.P2P]
    DialRatio = 3

---
kind: Secret
apiVersion: v1
metadata:
  name: geth-jwt
  namespace: {{ .Release.Namespace }}
data:
  jwt: >-
    MWU3YmY1Njg5MmNjY2JkNzQyYjYwMjkzMTY1NWUwMDA2YjhjZjE5YmE5MmU1ZmU3YTI4N2QxYTAxZDQ5OTRmMg==
  # jwt: {{ randAlphaNum 64 | b64enc }}
type: Opaque

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: geth
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: geth
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: geth
  serviceName: geth-headless
  # podManagementPolicy: OrderedReady
  # updateStrategy:
  #   type: RollingUpdate
  # revisionHistoryLimit: 10
  template:
    metadata:
      name: geth
      namespace: {{ .Release.Namespace }}
      labels:
        app.kubernetes.io/instance: geth
        app.kubernetes.io/name: geth
    spec:
      volumes:
        - name: storage
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appCache }}/anode/ethereum
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
        - name: config
          configMap:
            name: geth
            defaultMode: 420
        - name: volume
          secret:
            secretName: geth-jwt
            items:
              - key: jwt
                path: jwt.hex
            defaultMode: 420
      initContainers:
        - name: init-chown-data
          image: 'docker.io/aboveos/busybox:1.34.0'
          command:
            - chown
            - '-R'
            - '10001:10001'
            - /data
          resources: {}
          volumeMounts:
            - name: storage
              mountPath: /data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
      containers:
        - name: geth
          image: 'docker.io/aboveos/ethereum-client-go:latest'
          command:
            - sh
            - '-ac'
            - >-
              exec geth --datadir=/data --config=/config/geth.toml
              --nat=extip:$(POD_IP) --port=30303 --syncmode=snap --http
              --http.addr=0.0.0.0 --http.port=8545 --http.vhosts=*
              --http.corsdomain=* --ws --ws.addr=0.0.0.0 --ws.port=8546
              --ws.origins=*  --metrics --metrics.addr=0.0.0.0 --metrics.port=6060 
              --authrpc.jwtsecret="/jwt/node_beacon/jwt.hex"  --authrpc.port=8551 
              --authrpc.vhosts=*
          ports:
            - name: p2p-tcp
              containerPort: 30303
              protocol: TCP
            - name: p2p-udp
              containerPort: 30303
              protocol: UDP
            - name: http-rpc
              containerPort: 8545
              protocol: TCP
            - name: ws-rpc
              containerPort: 8546
              protocol: TCP
            - name: metrics
              containerPort: 6060
              protocol: TCP
            - name: http-8551
              containerPort: 8551
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          resources:
            limits:
              memory: 16Gi
              cpu: 500m
            requests:
              memory: 12Gi
              cpu: 250m
          volumeMounts:
            - name: storage
              mountPath: /data
            - name: config
              readOnly: true
              mountPath: /config
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
            - name: volume
              readOnly: true
              mountPath: /jwt/node_beacon/
          livenessProbe:
            tcpSocket:
              port: http-rpc
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 600
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: http-rpc
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: lighthouse
          image: 'docker.io/aboveos/sigp-lighthouse:latest'
          command:
            - sh
            - '-ac'
            - >-
              exec lighthouse --network mainnet beacon_node --datadir=/data
              --enr-address=$(POD_IP) --enr-tcp-port=9000 --enr-udp-port=9000
              --listen-address=0.0.0.0 --port=9000 --discovery-port=9000 --http
              --http-port=5052  --execution-endpoint=http://127.0.0.1:8551
              --execution-jwt=/jwt/node_beacon/jwt.hex  --http-address=0.0.0.0
              --checkpoint-sync-url=https://beaconstate.info  
              --disable-lock-timeouts  --metrics --metrics-address=0.0.0.0 
              --metrics-port=5054 --purge-db
          ports:
            - name: p2p-tcp
              containerPort: 9000
              protocol: TCP
            - name: p2p-udp
              containerPort: 9000
              protocol: UDP
            - name: http-api
              containerPort: 5052
              protocol: TCP
            - name: metrics
              containerPort: 5054
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          resources: 
            limits:
              memory: 8Gi
              cpu: 500m
            requests:
              memory: 4Gi
              cpu: 250m
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
            - name: storage
              mountPath: /data
            - name: volume
              readOnly: true
              mountPath: /jwt/node_beacon/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
---
kind: Service
apiVersion: v1
metadata:
  name: geth-headless
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: geth
    app.kubernetes.io/name: geth
spec:
  ports:
    - name: p2p-tcp
      protocol: TCP
      port: 30303
      targetPort: p2p-tcp
    - name: p2p-udp
      protocol: UDP
      port: 30303
      targetPort: p2p-udp
    - name: http-rpc
      protocol: TCP
      port: 8545
      targetPort: http-rpc
    - name: ws-rpc
      protocol: TCP
      port: 8546
      targetPort: ws-rpc
    - name: metrics
      protocol: TCP
      port: 6060
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: geth
    app.kubernetes.io/name: geth
  # type: NodePort
---
kind: Service
apiVersion: v1
metadata:
  name: lighthouse
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: lighthouse
    app.kubernetes.io/name: lighthouse
spec:
  ports:
    - name: p2p-tcp
      protocol: TCP
      port: 9000
      targetPort: p2p-tcp
    - name: p2p-udp
      protocol: UDP
      port: 9000
      targetPort: p2p-udp
    - name: http-api
      protocol: TCP
      port: 5052
      targetPort: http-api
    - name: metrics
      protocol: TCP
      port: 5054
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: lighthouse
    app.kubernetes.io/name: lighthouse
  type: ClusterIP

