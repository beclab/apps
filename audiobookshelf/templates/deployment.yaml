---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audiobookshelf
  namespace: '{{ .Release.Namespace }}'
  labels:
    io.kompose.service: audiobookshelf
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: audiobookshelf
  strategy: 
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/chrome-default: "true"
        io.kompose.service: audiobookshelf
    spec:
      containers:
      - name: audiobookshelf
        image: docker.io/aboveos/advplyr-audiobookshelf:2.25.1
        ports:
        - containerPort: 80
        env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: Etc/UTC
        resources:
          limits:
            cpu: 500m
            memory: 2048Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: home
          mountPath: /home
        - name: external
          mountPath: /external
        - name: app-data-metadata
          mountPath: /metadata
        - name: app-data-config
          mountPath: /config
      restartPolicy: Always
      volumes:
      - name: home
        hostPath:
          type: Directory
          path: '{{ .Values.userspace.userData }}'
      - name: external
        hostPath:
          type: DirectoryOrCreate
          path: '{{ .Values.sharedlib }}'
      - name: app-data-metadata
        hostPath:
          type: DirectoryOrCreate
          path: '{{ .Values.userspace.appData }}/audiobookshelf/metadata'
      - name: app-data-config
        hostPath:
          type: DirectoryOrCreate
          path: '{{ .Values.userspace.appData }}/audiobookshelf/config'

---
apiVersion: v1
kind: Service
metadata:
  name: audiobookshelf
  namespace: '{{ .Release.Namespace }}'
  labels:
    io.kompose.service: audiobookshelf
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    io.kompose.service: audiobookshelf
