apiVersion: v1
data:
  init.sh: |
    #!/bin/bash

    source_dir="/config"
    dest_dir="/new-config"

    if [ -z "$(ls -A $dest_dir)" ]; then
      echo "$dest_dir is empty. Copying files from $source_dir..."
      cp -r $source_dir/. $dest_dir
      echo "Files copied successfully."
    else
      echo "$dest_dir is not empty. No action taken."
    fi

kind: ConfigMap
metadata:
  name: init-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      initContainers:
      - env:
        - name: PGID
          value: "1000" 
        - name: PUID
          value: "1000" 
        - name: UMASK
          value: "002" 
        - name: TZ
          value: Etc/UTC
        name: radarr-init-data
        image: hotio/radarr:latest
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 256Mi
        ports:
        - containerPort: 7878
        volumeMounts:
        - mountPath: /new-config
          name: radarr-config
        - name: init-config 
          mountPath: /init.sh
          subPath: init.sh
        command:
          - sh
          - '-c'
          - |
            chmod +x /init.sh & bash /init.sh
      containers:
      - env:
        - name: PGID
          value: "1000" 
        - name: PUID
          value: "1000" 
        - name: UMASK
          value: "002" 
        - name: TZ
          value: Etc/UTC
        name: radarr
        image: hotio/radarr:latest
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 256Mi
        ports:
        - containerPort: 7878
        volumeMounts:
        - mountPath: /config
          name: radarr-config
        - name: home
          mountPath: /home

      volumes:
      - name: radarr-config
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.appData }}/radarr 
      - name: home
        hostPath:
          type: Directory
          path: {{ .Values.userspace.userData }}
      - name: init-config
        configMap:
          name: init-config
          defaultMode: 438
          items:
          - key: init.sh
            path: init.sh
            
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 7878
      targetPort: 7878
