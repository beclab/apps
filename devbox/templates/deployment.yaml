---
apiVersion: v1
kind: Service
metadata:
  name: devbox-svc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: devbox
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: devbox-server
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: devbox-server
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8088
      name: http
    - protocol: TCP
      port: 8083
      targetPort: 8083
      name: https

---
kind: Service
apiVersion: v1
metadata:
  name: chartmuseum
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8888
  selector:
    app: devbox-server

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: devbox-san-cnf
  namespace: {{ .Release.Namespace }}
data:
  san.cnf: |
    [req]
    distinguished_name = req_distinguished_name
    req_extensions = v3_req
    prompt = no

    [req_distinguished_name]
    countryName = CN
    stateOrProvinceName = Beijing
    localityName = Beijing
    0.organizationName = bytetrade
    commonName = devbox-server.{{ .Release.Namespace }}.svc

    [v3_req]
    basicConstraints = CA:FALSE
    keyUsage = nonRepudiation, digitalSignature, keyEncipherment
    subjectAltName = @bytetrade

    [bytetrade]
    DNS.1 = devbox-server.{{ .Release.Namespace }}.svc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devbox-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: devbox-server
    applications.app.bytetrade.io/author: bytetrade.io
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: devbox-server
  template:
    metadata:
      labels:
        app: devbox-server
    spec:
      serviceAccountName: bytetrade-controller
      volumes:
        - name: chart
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appData}}/devbox/Chart
        - name: data
          hostPath:
            type: DirectoryOrCreate
            path: {{ .Values.userspace.appData }}/devbox/Data
        - name: storage-volume
          hostPath:
            path: {{ .Values.userspace.appData }}/devbox/helm-repo-dev
            type: DirectoryOrCreate
        - name: config-san
          configMap:
            name: devbox-san-cnf
            items:
              - key: san.cnf
                path: san.cnf
        - name: certs
          emptyDir: {}
      initContainers:
        - name: init-chmod-data
          image: 'busybox:1.28'
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - '-c'
            - |
              chown -R 1000:1000 /home/coder
              chown -R 65532:65532 /charts
              chown -R 65532:65532 /data
          resources: {}
          volumeMounts:
            - name: storage-volume
              mountPath: /home/coder
            - name: chart
              mountPath: /charts
            - name: data
              mountPath: /data
          securityContext:
            runAsUser: 0

        - name: generate-certs
          image: beclab/openssl:v3
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh", "-c" ]
          args:
            - |
              openssl genrsa -out /etc/certs/ca.key 2048
              openssl req -new -x509 -days 3650 -key /etc/certs/ca.key -out /etc/certs/ca.crt \
                -subj "/CN=bytetrade CA/O=bytetrade/C=CN"
              openssl req -new -newkey rsa:2048 -nodes \
                -keyout /etc/certs/server.key -out /etc/certs/server.csr \
                -config /etc/san/san.cnf
              openssl x509 -req -days 3650 -in /etc/certs/server.csr \
                -CA /etc/certs/ca.crt -CAkey /etc/certs/ca.key \
                -CAcreateserial -out /etc/certs/server.crt \
                -extensions v3_req -extfile /etc/san/san.cnf
              chown -R 65532 /etc/certs/*
          volumeMounts:
            - name: config-san
              mountPath: /etc/san
            - name: certs
              mountPath: /etc/certs

      containers:
        - name: devbox
          image: beclab/devbox-server:v0.1.29
          imagePullPolicy: IfNotPresent
          args:
          - server
          ports:
            - name: port
              containerPort: 8088
              protocol: TCP
            - name: ssl-port
              containerPort: 8083
              protocol: TCP
          volumeMounts:
            - name: chart
              mountPath: /charts
            - name: data
              mountPath: /data
            - mountPath: /etc/certs
              name: certs
          lifecycle:
            preStop:
              exec:
                command:
                - "/devbox"
                - "clean"
          env:
            - name: BASE_DIR
              value: /charts
            - name: OS_API_KEY
              value: {{ .Values.os.appKey }}
            - name: OS_API_SECRET
              value: {{ .Values.os.appSecret }}
            - name: OS_SYSTEM_SERVER
              value: system-server.user-system-{{ .Values.bfl.username }}
            - name: NAME_SPACE
              value: {{ .Release.Namespace }}
            - name: OWNER
              value: '{{ .Values.bfl.username }}'
          resources:
            requests:
              cpu: "50m"
              memory: 100Mi
            limits:
              cpu: "0.5"
              memory: 500Mi
        - name: chartmuseum
          image: 'ghcr.io/helm/chartmuseum:v0.15.0'
          args:
            - '--port=8888'
            - '--storage-local-rootdir=/storage'
          ports:
            - name: http
              containerPort: 8888
              protocol: TCP
          env:
            - name: CHART_POST_FORM_FIELD_NAME
              value: chart
            - name: DISABLE_API
              value: 'false'
            - name: LOG_JSON
              value: 'true'
            - name: PROV_POST_FORM_FIELD_NAME
              value: prov
            - name: STORAGE
              value: local
          resources:
            requests:
              cpu: "50m"
              memory: 100Mi
            limits:
              cpu: "0.5"
              memory: 256Mi
          volumeMounts:
            - name: storage-volume
              mountPath: /storage
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devbox
  namespace: {{ .Release.Namespace }}
  labels:
    app: devbox
    applications.app.bytetrade.io/author: bytetrade.io
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devbox
  template:
    metadata:
      labels:
        app: devbox
    spec:
      volumes:
      - name: terminus-sidecar-config
        configMap:
          name: sidecar-configs
          items:
          - key: envoy.yaml
            path: envoy.yaml
      initContainers:
        - name: terminus-sidecar-init
          image: openservicemesh/init:v1.2.3
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities: 
              add:
              - NET_ADMIN
            runAsNonRoot: false
            runAsUser: 0
          command:
          - /bin/sh
          - -c
          - |
            iptables-restore --noflush <<EOF
            # sidecar interception rules
            *nat
            :PROXY_IN_REDIRECT - [0:0]
            :PROXY_INBOUND - [0:0]
            -A PROXY_IN_REDIRECT -p tcp -j REDIRECT --to-port 15003
            -A PROXY_INBOUND -p tcp --dport 15000 -j RETURN
            -A PROXY_INBOUND -p tcp -j PROXY_IN_REDIRECT
            -A PREROUTING -p tcp -j PROXY_INBOUND
            COMMIT
            EOF
          
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
      containers:
        - name: devbox
          image: beclab/devbox:v0.1.27
          imagePullPolicy: IfNotPresent
          ports:
            - name: port
              containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: "50m"
              memory: 100Mi
            limits:
              cpu: "0.5"
              memory: 256Mi
        - name: terminus-envoy-sidecar
          image: envoyproxy/envoy-distroless:v1.25.2
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
          ports:
          - name: proxy-admin
            containerPort: 15000
          - name: proxy-inbound
            containerPort: 15003
          resources:
            requests:
              cpu: "50m"
              memory: 100Mi
            limits:
              cpu: "0.5"
              memory: 200Mi
          volumeMounts:
          - name: terminus-sidecar-config
            readOnly: true
            mountPath: /etc/envoy/envoy.yaml
            subPath: envoy.yaml
          command:
          - /usr/local/bin/envoy
          - --log-level
          - debug
          - -c
          - /etc/envoy/envoy.yaml
          env:
          - name: POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
