apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: directus
  name: directus
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: directus
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/chrome-default: "true"
        io.kompose.service: directus
    spec:
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Etc/UTC
            - name: DISPLAY
              value: ':0'
            - name: HOST
              value: '0.0.0.0'
            - name: PORT
              value: '8055'
            - name: PUBLIC_URL
              value: 'https://directus.example.com'
            - name: SECRET
              value: 'replace-with-secure-random-value'
            - name: ADMIN_EMAIL
              value: 'zhangdongfang@bytetrade.io'
            - name: ADMIN_PASSWORD
              value: 'pw123456abcd'
            - name: WEBSOCKETS_ENABLED
              value: 'true'
            - name: DB_CLIENT
              value: 'pg'
            - name: DB_HOST
              value: '{{ .Values.postgres.host }}'
            - name: DB_PORT
              value: '{{ .Values.postgres.port }}'
            - name: DB_USER
              value: '{{ .Values.postgres.username }}'
            - name: DB_PASSWORD
              value: '{{ .Values.postgres.password }}'
            - name: DB_DATABASE
              value: '{{ .Values.postgres.databases.directus }}'
            - name: CACHE_ENABLED
              value: 'true'
            - name: CACHE_AUTO_PURGE
              value: 'true'
            - name: CACHE_STORE
              value: 'redis'
            - name: REDIS
              value: 'redis://directus-redis:6379/0'

          image: docker.io/directus/directus:11.4.1
          name: directus
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 2000m
              memory: 2Gi
          ports:
            - name: http
              containerPort: 8055
              protocol: TCP
          volumeMounts:
            - mountPath: /directus/uploads
              name: uploads
            - mountPath: /directus/extensions
              name: extensions
            - mountPath: /directus/database
              name: database
            - mountPath: /directus/templates
              name: templates
      restartPolicy: Always
      volumes:
        - name: uploads
          hostPath:
            type: DirectoryOrCreate
            path: '{{ .Values.userspace.appData }}/directus/uploads'
        - name: extensions
          hostPath:
            type: DirectoryOrCreate
            path: '{{ .Values.userspace.appData }}/directus/extensions'
        - name: database
          hostPath:
            type: DirectoryOrCreate
            path: '{{ .Values.userspace.appData }}/directus/database'
        - name: templates
          hostPath:
            type: DirectoryOrCreate
            path: '{{ .Values.userspace.appData }}/directus/templates'
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: directus
  name: directus
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: "8055"
      port: 8055
      targetPort: 8055
  selector:
    io.kompose.service: directus
status:
  loadBalancer: {}