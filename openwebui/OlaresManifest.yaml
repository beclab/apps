olaresManifest.version: '0.8.1'
olaresManifest.type: app
metadata:
  name: openwebui
  title: Open WebUI
  description: User-friendly WebUI for LLMs
  icon: https://file.bttcdn.com/appstore/openwebui/icon.png
  version: '1.0.6'
  appid: openwebui
  categories:
  - Productivity
entrances:
- authLevel: private
  host: openwebui
  icon: https://file.bttcdn.com/appstore/openwebui/icon.png
  name: openwebui
  openMethod: default
  port: 8080
  title: Open WebUI
spec:
  versionName: '0.6.6'
  featuredImage: https://file.bttcdn.com/appstore/openwebui/1.webp
  promoteImage:
  - https://file.bttcdn.com/appstore/openwebui/1.webp
  - https://file.bttcdn.com/appstore/openwebui/2.webp
  - https://file.bttcdn.com/appstore/openwebui/3.webp
  - https://file.bttcdn.com/appstore/openwebui/4.webp
  fullDescription: |
    Open WebUI(Formerly Ollama WebUI) is an extensible, feature-rich, and user-friendly self-hosted WebUI designed to operate entirely offline. It supports various LLM runners, including Ollama and OpenAI-compatible APIs. For more information, be sure to check out our Open WebUI Documentation.

    Key Features of Open WebUI
    - Ollama/OpenAI API Integration: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with LMStudio, GroqCloud, Mistral, OpenRouter, and more.

    - Pipelines, Open WebUI Plugin Support: Seamlessly integrate custom logic and Python libraries into Open WebUI using Pipelines Plugin Framework. Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. Examples include Function Calling, User Rate Limiting to control access, Usage Monitoring with tools like Langfuse, Live Translation with LibreTranslate for multilingual support, Toxic Message Filtering and much more.

    - Responsive Design: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.

    - Progressive Web App (PWA) for Mobile: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.

    - Full Markdown and LaTeX Support: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.

    - Hands-Free Voice/Video Call: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.

    - Model Builder: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through Open WebUI Community integration.

    - Native Python Function Calling Tool: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.

    - Local RAG Integration: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the # command before a query.

    - Web Search for RAG: Perform web searches using providers like SearXNG, Google PSE, Brave Search, serpstack, serper, Serply, DuckDuckGo and TavilySearch and inject the results directly into your chat experience.

    - Web Browsing Capability: Seamlessly integrate websites into your chat experience using the # command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.

    - Image Generation Integration: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI's DALL-E (external), enriching your chat experience with dynamic visual content.

    - Many Models Conversations: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.

    - Role-Based Access Control (RBAC): Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.

    - Multilingual Support: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We're actively seeking contributors!

    - Continuous Updates: We are committed to improving Open WebUI with regular updates, fixes, and new features.

  upgradeDescription: |
    Upgrade app version to 0.4.8
    
    Added
    - Bypass Model Access Control: Introduced the 'BYPASS_MODEL_ACCESS_CONTROL' environment variable. Easily bypass model access controls for user roles when access control isn't required, simplifying workflows for trusted environments.
    - Markdown in Banners: Now supports markdown for banners, enabling richer, more visually engaging announcements.
    - Internationalization Updates: Enhanced translations across multiple languages, further improving accessibility and global user experience.
    - Styling Enhancements: General UI style refinements for a cleaner and more polished interface.
    - Rich Text Reliability: Improved the reliability and stability of rich text input across chats for smoother interactions.

    Fixed
    - Tailwind Build Issue: Resolved a breaking bug caused by Tailwind, ensuring smoother builds and overall system reliability.
    - Knowledge Collection Query Fix: Addressed API endpoint issues with querying knowledge collections, ensuring accurate and reliable information retrieval.

    View full release note at: https://github.com/open-webui/open-webui/releases/tag/v0.4.8

  developer: OpenWebUI
  website: https://openwebui.com/
  sourceCode: https://github.com/open-webui/open-webui
  submitter: Olares
  locale:
  - en-US
  - zh-CN
  doc: https://docs.openwebui.com/
  license:
  - text: MIT
    url: https://github.com/open-webui/open-webui?tab=MIT-1-ov-file#readme
  limitedCpu: 1000m
  limitedDisk: 500Mi
  limitedMemory: 1000Mi
  requiredCpu: 50m
  requiredDisk: 50Mi
  requiredMemory: 512Mi
  supportArch:
  - amd64
  - arm64
permission:
  appCache: true
  appData: true
  sysData:
  - dataType: legacy_ollama
    appName: ollama
    svc: ollama
    port: 11434
    group: api.ollama
    version: v2
    ops:
    - All
  - dataType: legacy_gaianetai
    appName: gaianetai
    svc: gaianetai
    port: 8080
    group: api.gaianetai
    version: v2
    ops:
    - All
  - dataType: legacy_whisper
    appName: whisper
    svc: whisper
    port: 8000
    group: api.whisper
    version: v2
    ops:
    - All
  - dataType: legacy_openedaispeech
    appName: openedaispeech
    svc: openedaispeech
    port: 8000
    group: api.openedaispeech
    version: v2
    ops:
    - All
  - dataType: legacy_sdwebui
    appName: sdwebui
    svc: sdwebui
    port: 7860
    group: api.sdwebui
    version: v2
    ops:
    - All
options:
  apiTimeout: 0
  analytics:
    enabled: false
  dependencies:
  - name: olares
    type: system
    version: '>=1.10.0-0'
  - name: ollama
    type: application
    version: '>=1.0.3'
  - name: xinference
    type: application
    version: '>=1.0.0'
  - name: whisper
    type: application
    version: '>=0.1.0'
  - name: openedaispeech
    type: application
    version: '>=0.1.0'
  - name: gaianetai
    type: application
    version: '>=0.1.0'
  resetCookie:
    enabled: false