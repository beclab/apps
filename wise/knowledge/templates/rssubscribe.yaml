{{- $rssubscribe_secret := (lookup "v1" "Secret" .Release.Namespace "rssubscribe-secrets") -}}
{{- $password := "" -}}
{{ if $rssubscribe_secret -}}
{{- $password = (index $rssubscribe_secret "data" "password") -}}
{{ else -}}
{{ $password = randAlphaNum 16 | b64enc }}
{{- end -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: rssubscribe-secrets
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  password: {{ $password }}
---
apiVersion: apr.bytetrade.io/v1alpha1
kind: MiddlewareRequest
metadata:
  name: rssubscribe-pg
  namespace: {{ .Release.Namespace }}
spec:
  app: rssubscribe
  appNamespace: {{ .Release.Namespace }}
  middleware: postgres
  postgreSQL:
    user: wise_rssubscribe
    password:
      valueFrom:
        secretKeyRef:
          key: password
          name: rssubscribe-secrets
    databases:
    - name: rssubscribe
---
apiVersion: apr.bytetrade.io/v1alpha1
kind: MiddlewareRequest
metadata:
  name: rssubscribe-nats
  namespace: {{ .Release.Namespace }}
spec:
  app: rssubscribe
  appNamespace: os
  middleware: nats
  nats:
    password:
      valueFrom:
        secretKeyRef:
          key: password
          name: rssubscribe-secrets
    user: "{{ .Release.Namespace }}-rssubscribe"
    subjects:
      - name: rssubscribe_status
        permission:
          pub: allow
          sub: allow
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rssubscribe-cluster-account
  namespace:  {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rssubscribe-cluster-role
rules:
- apiGroups: 
    - '*'            
  resources: 
    - statefulsets
    - daemonsets
    - namespaces   
    - serviceaccounts/token
  verbs: 
    - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rssubscribe-cluster-binding
subjects:
- kind: ServiceAccount
  name: rssubscribe-cluster-account
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: rssubscribe-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rssubscribe
  namespace: {{ .Release.Namespace }}
  labels:
    app: rssubscribe
    applications.app.bytetrade.io/author: bytetrade.io
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: rssubscribe
  template:
    metadata:
      labels:
        app: rssubscribe
    spec:
      serviceAccountName: rssubscribe-cluster-account
      serviceAccount: rssubscribe-cluster-account
      containers:
        - name: rssubscribe
          image: beclab/rssubscribe:v0.1.2
          imagePullPolicy: IfNotPresent
          env:
          - name: LISTEN_ADDR
            value: 0.0.0.0:8082
          - name: PG_USERNAME
            value: wise_rssubscribe
          - name: RSS_HUB_URL
            value: http://rss-server.knowledge-shared:1200/
          - name: PG_PASSWORD
            value: {{ $password | b64dec }}
          - name: PG_HOST
            value: {{ .Values.postgres.host }}
          - name: PG_PORT
            value: "5432"
          - name: PG_DATABASE
            value: knowledge_shared_rssubscribe
          - name: RSS_HUB_URL
            value: http://rss-server.knowledge-shared:1200/
          - name: NATS_URL
            value: nats://nats.os-platform:4222
          - name: NATS_USERNAME
            value: {{ .Release.Namespace }}-rssubscribe
          - name: NATS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: rssubscribe-secrets
          - name: NATS_SUBJECT
            value: os.rssubscribe_status
          ports:
          - containerPort: 8082
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
            limits:
              cpu: "500m"
              memory: 350Mi
---
apiVersion: v1
kind: Service
metadata:
  name: rssubscribe
  # namespace: knowledge-shared
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: rssubscribe
  ports:
    - name: server
      protocol: TCP
      port: 8082
      targetPort: 8082
 