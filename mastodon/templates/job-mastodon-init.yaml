apiVersion: batch/v1
kind: Job
metadata:
  name: mastodon-init
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: mastodon
    helm.sh/chart: mastodon-0.1.2
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: mastodon
  annotations:
    helm.sh/hook: post-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "10"
spec:
  backoffLimit: 10
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mastodon
        helm.sh/chart: mastodon-0.1.2
        app.kubernetes.io/instance: mastodon
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: init
    spec:
      
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      automountServiceAccountToken: false
      initContainers:
        - name: copy-assets-dir
          image: docker.io/bitnami/mastodon:4.2.8-debian-12-r6
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash
              cp -r /opt/bitnami/mastodon/public/* /public
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 1024Mi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /public
              subPath: app-public-dir
      containers:
        # We separate the job in multiple containers to be able to run them in parallel. We put everything on the same job
        # as it follows the Job Pattern best practices
        # https://kubernetes.io/docs/concepts/workloads/controllers/job/#job-patterns
        - name: migrate-and-create-admin
          image: docker.io/bitnami/mastodon:4.2.8-debian-12-r6
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
          args:
            - /scripts/migrate-and-create-admin.sh
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MASTODON_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mastodon-postgresql
                  key: "password"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mastodon-postgresql
                  key: "password"
            # The rake db:migrate job requires access to Redis
            - name: MASTODON_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mastodon-redis
                  key: "redis-password"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mastodon-redis
                  key: "redis-password"
          envFrom:
            - configMapRef:
                name: mastodon-default
            - secretRef:
                name: mastodon-default
          volumeMounts:
            - name: scripts
              mountPath: /scripts
          resources:
            limits: {}
            requests: {}
        - name: mastodon-assets-precompile
          image: docker.io/bitnami/mastodon:4.2.8-debian-12-r6
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
          args:
            - /scripts/precompile-assets.sh
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MASTODON_S3_HOSTNAME
              value: "mastodon-minio"
            - name: MASTODON_S3_PORT_NUMBER
              value: "80"
            - name: MASTODON_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: mastodon-minio
                  key: "root-user"
            - name: MASTODON_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mastodon-minio
                  key: "root-password"
          envFrom:
            - configMapRef:
                name: mastodon-default
            - secretRef:
                name: mastodon-default
          volumeMounts:
            - name: empty-dir
              mountPath: /opt/bitnami/mastodon/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mastodon/public
              subPath: app-public-dir
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: scripts
              mountPath: /scripts
          resources:
            limits: {}
            requests: {}
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: scripts
          configMap:
            name: mastodon-init-scripts
            defaultMode: 0755
