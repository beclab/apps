apiVersion: v1
data:
  nginx.conf: |
    
    http {
        server {
            listen 8001;
        
            location = / {
                rewrite ^ /_utils;
            }

            location / {
                proxy_pass http://127.0.0.1:5984;
            }
        }
    }

    events {
      # Your event-related configurations go here
    }

kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  init.sh: |
    #!/bin/bash

    new_etc_dir="/new-etc"
    couchdb_etc_dir="/opt/couchdb/etc"

    if [ -d "$new_etc_dir" ] && [ -z "$(ls -A $new_etc_dir)" ]; then
      cp -r $couchdb_etc_dir/. $new_etc_dir
      echo "Files and directories from $couchdb_etc_dir copied to $new_etc_dir"
    else
      echo "$new_etc_dir is not an empty directory or does not exist"
    fi


kind: ConfigMap
metadata:
  name: init-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  local.ini: |
    [admins]
    admin = -pbkdf2-97e50faaa81dfda26c7ef6178808ae441f87092f,8dba11bb4382e2d3fb9799ab60a1212a,10

    [couchdb]
    single_node=true
    max_document_size = 50000000

    [chttpd]
    require_valid_user = true
    max_http_request_size = 4294967296

    [chttpd_auth]
    require_valid_user = true
    authentication_redirect = /_utils/session.html

    [httpd]
    WWW-Authenticate = Basic realm="couchdb"
    enable_cors = true

    [cors]
    origins = app://obsidian.md,capacitor://localhost,http://localhost
    credentials = true
    headers = accept, authorization, content-type, origin, referer
    methods = GET, PUT, POST, HEAD, DELETE
    max_age = 3600
kind: ConfigMap
metadata:
  name: obsidian-config
  namespace: {{ .Release.Namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: obsidian
spec:
  replicas: 1
  selector:
    matchLabels:
      app: obsidian
  template:
    metadata:
      labels:
        app: obsidian
    spec:
      initContainers:
      - name: init-config
        image: 'couchdb:3.1.2'
        command:
          - sh
          - '-c'
          - |
            chmod +x /init.sh & bash /init.sh
        volumeMounts:
        - mountPath: /opt/couchdb/etc/local.ini
          name: obsidian-config
          subPath: local.ini  
        - mountPath: /new-etc
          name: server-etc
        - name: init-config 
          mountPath: /init.sh
          subPath: init.sh
      containers:
      - name: nginx
        image: nginx:latest
        volumeMounts:
        - name: nginx-config 
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        ports:
        - containerPort: 8001
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
      - name: server
        image: couchdb:3.1.2
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 128Mi
        ports:
        - containerPort: 5984
        volumeMounts:
        - mountPath: /opt/couchdb/data
          name: server-data
        - mountPath: /opt/couchdb/etc
          name: server-etc
        command:
        - tini
        - --
        - /opt/couchdb/bin/couchdb
        # env:
        # - name: COUCHDB_USER
        #   value: admin 
        # - name: COUCHDB_PASSWORD
        #   value: password 
        
      volumes:
      - name: server-data
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.appData }}/obsidian/data
      - name: server-etc
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.appData }}/obsidian/etc   
      - name: obsidian-config
        configMap:
          defaultMode: 420
          name: obsidian-config
          items:
          - key: local.ini
            path: local.ini        
      - name: init-config
        configMap:
          name: init-config
          defaultMode: 438
          items:
          - key: init.sh
            path: init.sh
      - name: nginx-config
        configMap:
          name: nginx-config
          defaultMode: 438
          items:
          - key: nginx.conf
            path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
